/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  example_input: { // input type
    id?: string | null; // ID
    name?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Mutation: {};
  Query: {};
  example: { // root type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    name: string; // String!
    updated_at: any; // DateTime!
  }
  base: NexusGenRootTypes['example'];
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  example_input: NexusGenInputs['example_input'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createExample: NexusGenRootTypes['example']; // example!
    deleteExample: string; // String!
    updateExample: NexusGenRootTypes['example']; // example!
  }
  Query: { // field return type
    example: NexusGenRootTypes['example']; // example!
    examples: NexusGenRootTypes['example'][]; // [example!]!
  }
  example: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    name: string; // String!
    updated_at: any; // DateTime!
  }
  base: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    updated_at: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createExample: { // args
      payload: NexusGenInputs['example_input']; // example_input!
    }
    deleteExample: { // args
      id: string; // String!
    }
    updateExample: { // args
      payload: NexusGenInputs['example_input']; // example_input!
    }
  }
  Query: {
    example: { // args
      id: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  base: "example"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Query" | "example";

export type NexusGenInputNames = "example_input";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = "base";

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
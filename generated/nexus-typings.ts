/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  comment_input: { // input type
    comment_id?: string | null; // ID
    content?: string | null; // String
    id?: string | null; // ID
    post_id?: string | null; // ID
  }
  post_input: { // input type
    content?: string | null; // String
    id?: string | null; // ID
    title?: string | null; // String
    topic_id?: string | null; // ID
  }
  topic_input: { // input type
    id?: string | null; // ID
    is_private?: boolean | null; // Boolean
    title?: string | null; // String
  }
  topic_user_input: { // input type
    topic_id?: string | null; // ID
    topic_role?: NexusGenEnums['topic_user_roles'] | null; // topic_user_roles
    user_id?: string | null; // ID
  }
  user_input: { // input type
    email?: string | null; // String
    first_name?: string | null; // String
    last_name?: string | null; // String
  }
  user_like_input: { // input type
    content_id?: string | null; // ID
    content_type?: NexusGenEnums['like_types'] | null; // like_types
    liked?: boolean | null; // Boolean
  }
}

export interface NexusGenEnums {
  like_types: "comment" | "post"
  topic_user_roles: "contributor" | "moderator" | "owner" | "viewer"
}

export interface NexusGenRootTypes {
  Mutation: {};
  Query: {};
  app_token: { // root type
    expiresAt: any; // DateTime!
    refreshToken?: string | null; // String
    token: string; // String!
  }
  comment: { // root type
    comment_id?: string | null; // ID
    content: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    post_id?: string | null; // ID
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  hosted_content: { // root type
    content_type: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    hosted_url: string; // String!
    id: string; // ID!
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  post: { // root type
    content: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    title: string; // String!
    topic_id?: string | null; // ID
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  topic: { // root type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    is_private: boolean; // Boolean!
    title: string; // String!
    updated_at: any; // DateTime!
  }
  topic_user: { // root type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    topic_id: string; // ID!
    topic_role: NexusGenEnums['topic_user_roles']; // topic_user_roles!
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  user: { // root type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    email: string; // String!
    first_name: string; // String!
    id: string; // ID!
    last_name: string; // String!
    updated_at: any; // DateTime!
  }
  user_like: { // root type
    content_id: string; // ID!
    content_type: NexusGenEnums['like_types']; // like_types!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    liked: boolean; // Boolean!
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  base: NexusGenRootTypes['comment'] | NexusGenRootTypes['user_like'] | NexusGenRootTypes['post'] | NexusGenRootTypes['user'] | NexusGenRootTypes['topic'] | NexusGenRootTypes['topic_user'] | NexusGenRootTypes['hosted_content'];
  likable_content: NexusGenRootTypes['comment'] | NexusGenRootTypes['post'];
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
  like_types_union: NexusGenRootTypes['comment'] | NexusGenRootTypes['post'];
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  comment_input: NexusGenInputs['comment_input'];
  post_input: NexusGenInputs['post_input'];
  topic_input: NexusGenInputs['topic_input'];
  topic_user_input: NexusGenInputs['topic_user_input'];
  user_input: NexusGenInputs['user_input'];
  user_like_input: NexusGenInputs['user_like_input'];
  like_types: NexusGenEnums['like_types'];
  topic_user_roles: NexusGenEnums['topic_user_roles'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createComment: NexusGenRootTypes['comment']; // comment!
    createHostedContent: NexusGenRootTypes['hosted_content']; // hosted_content!
    createPost: NexusGenRootTypes['post']; // post!
    createTopic: NexusGenRootTypes['topic']; // topic!
    createTopicUser: NexusGenRootTypes['topic_user']; // topic_user!
    createUser: NexusGenRootTypes['user']; // user!
    createUserLike: NexusGenRootTypes['user_like']; // user_like!
    deleteComment: string; // String!
    deleteHostedContent: string; // String!
    deletePost: string; // String!
    deleteTopic: string; // String!
    deleteTopicUser: string; // String!
    deleteUser: string; // String!
    deleteUserLike: string; // String!
    loginUser: NexusGenRootTypes['app_token']; // app_token!
    updateComment: NexusGenRootTypes['comment']; // comment!
    updatePost: NexusGenRootTypes['post']; // post!
    updateTopic: NexusGenRootTypes['topic']; // topic!
    updateUser: NexusGenRootTypes['user']; // user!
    updateUserLike: NexusGenRootTypes['user_like']; // user_like!
    useRefreshToken: NexusGenRootTypes['app_token']; // app_token!
  }
  Query: { // field return type
    comment: NexusGenRootTypes['comment'] | null; // comment
    contentLikes: NexusGenRootTypes['user_like'][]; // [user_like!]!
    getCommentReplies: NexusGenRootTypes['comment'][]; // [comment!]!
    getCommentsForPost: NexusGenRootTypes['comment'][]; // [comment!]!
    getHostedContentForUser: NexusGenRootTypes['hosted_content'][]; // [hosted_content!]!
    getPostsForTopic: NexusGenRootTypes['post'][]; // [post!]!
    getPostsForUser: NexusGenRootTypes['post'][]; // [post!]!
    hostedContent: NexusGenRootTypes['hosted_content'] | null; // hosted_content
    post: NexusGenRootTypes['post'] | null; // post
    topic: NexusGenRootTypes['topic'] | null; // topic
    topics: NexusGenRootTypes['topic'][] | null; // [topic!]
    TopicUser: NexusGenRootTypes['topic_user'] | null; // topic_user
    TopicUsers: NexusGenRootTypes['topic_user'][]; // [topic_user!]!
    user: NexusGenRootTypes['user'] | null; // user
    userLike: NexusGenRootTypes['user_like'] | null; // user_like
    userLikes: NexusGenRootTypes['user_like'][]; // [user_like!]!
  }
  app_token: { // field return type
    expiresAt: any; // DateTime!
    refreshToken: string | null; // String
    token: string; // String!
  }
  comment: { // field return type
    comment_id: string | null; // ID
    content: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    dislikes_count: number; // Int!
    id: string; // ID!
    likes: NexusGenRootTypes['user_like'][] | null; // [user_like!]
    likes_count: number; // Int!
    post: NexusGenRootTypes['post']; // post!
    post_id: string | null; // ID
    replies: NexusGenRootTypes['comment'][] | null; // [comment!]
    reply_depth: number; // Int!
    updated_at: any; // DateTime!
    user: NexusGenRootTypes['user'] | null; // user
    user_id: string; // ID!
  }
  hosted_content: { // field return type
    content_type: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    hosted_url: string; // String!
    id: string; // ID!
    updated_at: any; // DateTime!
    user_id: string; // ID!
  }
  post: { // field return type
    comments: NexusGenRootTypes['comment'][] | null; // [comment!]
    content: string; // String!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    dislikes_count: number; // Int!
    id: string; // ID!
    likes: NexusGenRootTypes['user_like'][] | null; // [user_like!]
    likes_count: number; // Int!
    title: string; // String!
    topic_id: string | null; // ID
    updated_at: any; // DateTime!
    user: NexusGenRootTypes['user'] | null; // user
    user_id: string; // ID!
  }
  topic: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    is_private: boolean; // Boolean!
    posts: NexusGenRootTypes['post'][] | null; // [post!]
    title: string; // String!
    topic_users: NexusGenRootTypes['topic_user'][] | null; // [topic_user!]
    updated_at: any; // DateTime!
  }
  topic_user: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    topic: NexusGenRootTypes['topic'] | null; // topic
    topic_id: string; // ID!
    topic_role: NexusGenEnums['topic_user_roles']; // topic_user_roles!
    updated_at: any; // DateTime!
    user: NexusGenRootTypes['user'] | null; // user
    user_id: string; // ID!
  }
  user: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    email: string; // String!
    first_name: string; // String!
    id: string; // ID!
    last_name: string; // String!
    likes: NexusGenRootTypes['user_like'][] | null; // [user_like!]
    posts: NexusGenRootTypes['post'][] | null; // [post!]
    topics: NexusGenRootTypes['topic'][] | null; // [topic!]
    updated_at: any; // DateTime!
  }
  user_like: { // field return type
    content: NexusGenRootTypes['like_types_union']; // like_types_union!
    content_id: string; // ID!
    content_type: NexusGenEnums['like_types']; // like_types!
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    liked: boolean; // Boolean!
    updated_at: any; // DateTime!
    user: NexusGenRootTypes['user']; // user!
    user_id: string; // ID!
  }
  base: { // field return type
    created_at: any; // DateTime!
    deleted: boolean; // Boolean!
    id: string; // ID!
    updated_at: any; // DateTime!
  }
  likable_content: { // field return type
    content: string; // String!
    dislikes_count: number; // Int!
    id: string; // ID!
    likes: NexusGenRootTypes['user_like'][] | null; // [user_like!]
    likes_count: number; // Int!
    user: NexusGenRootTypes['user'] | null; // user
    user_id: string; // ID!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createComment: { // args
      payload: NexusGenInputs['comment_input']; // comment_input!
    }
    createHostedContent: { // args
      url: string; // String!
    }
    createPost: { // args
      payload: NexusGenInputs['post_input']; // post_input!
    }
    createTopic: { // args
      payload: NexusGenInputs['topic_input']; // topic_input!
    }
    createTopicUser: { // args
      payload: NexusGenInputs['topic_user_input']; // topic_user_input!
    }
    createUser: { // args
      password: string; // String!
      payload: NexusGenInputs['user_input']; // user_input!
    }
    createUserLike: { // args
      payload: NexusGenInputs['user_like_input']; // user_like_input!
    }
    deleteComment: { // args
      id: string; // String!
    }
    deleteHostedContent: { // args
      id: string; // String!
    }
    deletePost: { // args
      id: string; // String!
    }
    deleteTopic: { // args
      id: string; // String!
    }
    deleteTopicUser: { // args
      topic_id: string; // String!
      user_id: string; // String!
    }
    deleteUser: { // args
      id: string; // String!
    }
    deleteUserLike: { // args
      content_id: string; // String!
      user_id: string; // String!
    }
    loginUser: { // args
      email: string; // String!
      password: string; // String!
    }
    updateComment: { // args
      payload: NexusGenInputs['comment_input']; // comment_input!
    }
    updatePost: { // args
      payload: NexusGenInputs['post_input']; // post_input!
    }
    updateTopic: { // args
      payload: NexusGenInputs['topic_input']; // topic_input!
    }
    updateUser: { // args
      payload: NexusGenInputs['user_input']; // user_input!
    }
    updateUserLike: { // args
      payload: NexusGenInputs['user_like_input']; // user_like_input!
    }
    useRefreshToken: { // args
      refreshToken: string; // String!
    }
  }
  Query: {
    comment: { // args
      id: string; // String!
    }
    contentLikes: { // args
      content_id: string; // String!
    }
    getCommentReplies: { // args
      comment_id: string; // String!
    }
    getCommentsForPost: { // args
      post_id: string; // String!
    }
    getHostedContentForUser: { // args
      user_id?: string | null; // String
    }
    getPostsForTopic: { // args
      topic_id: string; // String!
    }
    getPostsForUser: { // args
      user_id?: string | null; // String
    }
    hostedContent: { // args
      id: string; // String!
    }
    post: { // args
      id: string; // String!
    }
    topic: { // args
      id: string; // String!
    }
    TopicUser: { // args
      topic_id: string; // String!
      user_id: string; // String!
    }
    TopicUsers: { // args
      topic_id: string; // String!
    }
    user: { // args
      id?: string | null; // String
    }
    userLike: { // args
      content_id: string; // String!
      user_id: string; // String!
    }
    userLikes: { // args
      user_id: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  like_types_union: "comment" | "post"
  base: "comment" | "user_like" | "post" | "user" | "topic" | "topic_user" | "hosted_content"
  likable_content: "comment" | "post"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Query" | "app_token" | "comment" | "hosted_content" | "post" | "topic" | "topic_user" | "user" | "user_like";

export type NexusGenInputNames = "comment_input" | "post_input" | "topic_input" | "topic_user_input" | "user_input" | "user_like_input";

export type NexusGenEnumNames = "like_types" | "topic_user_roles";

export type NexusGenInterfaceNames = "base" | "likable_content";

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = "like_types_union";

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}